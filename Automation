Option Explicit
        Const FOLDER_SAVED As String = "xxxxxxxx‚Äù
        Const SOURCE_FILE_PATH As String = "xxxxxxx"
    Sub AutoOpen()
    Dim MainDoc As Document, TargetDoc As Document
    Dim recordNumber As Long, totalRecord As Long
    Dim i As Integer
    Dim StartRow As Integer, EndRow As Integer
        
        
    StartRow = InputBox("Enter the starting record for creating Fact Sheets.")
    EndRow = InputBox("Enter the last record for creating Fact Sheets.")
    
    
    Set MainDoc = ThisDocument
    
    With MainDoc.MailMerge
        .OpenDataSource Name:=SOURCE_FILE_PATH, SQLStatement:="SELECT*FROM[Master Copied Area$]"
    
           totalRecord = .DataSource.RecordCount
            
        For recordNumber = StartRow To (EndRow - 1)
            
      
            With .DataSource
                .ActiveRecord = recordNumber
                .FirstRecord = recordNumber
                .LastRecord = recordNumber
            End With
            
            .Destination = wdSendToNewDocument
             
            .Execute False
      
        
            Set TargetDoc = ActiveDocument
                TargetDoc.SaveAs2 FOLDER_SAVED + .DataSource.DataFields("Event_Date_Text") + " - " + .DataSource.DataFields("Company_Name") + _
                " " + .DataSource.DataFields("Screening_Location") + " - " + .DataSource.DataFields("City") + ", " + .DataSource.DataFields("State") + " Fact Sheet" + ".docx", wdFormatDocumentDefault
                
            
                TargetDoc.Close False
            Set TargetDoc = Nothing
        
        Next recordNumber
        
    End With
    
    Set TargetDoc = Nothing
    
End Sub

------------------------------------------------------------------------------------------------------------


Sub CopyandPasteRows()
'
' CopyandPasteRows Macro
'
Application.Calculation = xlCalculationManual
'
    Rows("2:2").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Workbooks.Open Filename:= _
        "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" _
        , UpdateLinks:=3
    Sheets("DATA").Select
    ActiveWindow.ScrollColumn = 33
    ActiveWindow.ScrollColumn = 32
    ActiveWindow.ScrollColumn = 30
    ActiveWindow.ScrollColumn = 27
    ActiveWindow.ScrollColumn = 21
    ActiveWindow.ScrollColumn = 15
    ActiveWindow.ScrollColumn = 5
    ActiveWindow.ScrollColumn = 1
    Range("A2").Select
    Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:= _
        True, Transpose:=False
    Application.CutCopyMode = False
    ChDir "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    Application.DisplayAlerts = False
    ActiveWorkbook.SaveAs Filename:= _
        "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx" _
        , FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        Application.DisplayAlerts = True
        
Application.Calculation = xlCalculationAutomatic
End Sub


-------------------------------------------------------------------------------------------------------------------

Sub DataCleanup()

Application.Calculation = xlCalculationManual


'Inserting column for Combination/Duplicate removal
Range("I1").EntireColumn.Insert
Application.Worksheets("Data").Range("I1") = "Combo"

'Add Combinations to combo colum with DOB
Application.Worksheets("Data").Range("I2").Formula = "=H2&G2&N2"
Application.Worksheets("Data").Range("I2:I5000").FillDown

'Check for Duplicates in Data
    Columns("I:I").Select
    Selection.FormatConditions.AddUniqueValues
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    Selection.FormatConditions(1).DupeUnique = xlDuplicate
    With Selection.FormatConditions(1).Font
        .Color = -16383844
        .TintAndShade = 0
    End With
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 13551615
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
 'Replace all Not Availables
 Worksheets("Data").Columns("A:BV").Replace _
 What:="Not Available", Replacement:="", _
 SearchOrder:=xlByColumns, MatchCase:=False
 
  Worksheets("Data").Columns("A:BV").Replace "N/A", "", xlWhole
 
 'Replace Food or non fasting with NonFasting
 Worksheets("Data").Columns("AU").Replace "No", "NonFasting", xlWhole
 

 Worksheets("Data").Columns("AU").Replace _
 What:="Food 0-2 hrs ago", Replacement:="NonFasting", _
 SearchOrder:=xlByColumns, MatchCase:=False
 
 Worksheets("Data").Columns("AU").Replace _
 What:="", Replacement:="NonFasting", _
 SearchOrder:=xlByColumns, MatchCase:=False
 
 
 'Calculate the CVD RISK by SUMMING the rows
Application.Worksheets("Data").Range("BN2").Formula = "=BB2+AT2+AK2+AD2+S2+P2+AA2"
Application.Worksheets("Data").Range("BN2:BN5000").FillDown

'Delete blank rows at end of work book
Application.Worksheets("Data").Range("A1:A5000").Select
Selection.SpecialCells(xlCellTypeBlanks).EntireRow.Delete

'Refresh All pivots
ActiveWorkbook.RefreshAll


'Save
ActiveWorkbook.Save

Application.ScreenUpdating = True

Application.Calculation = xlCalculationAutomatic

 
End Sub
